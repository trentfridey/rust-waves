{"version":3,"sources":["js/index.js","node_modules/parcel-bundler/src/builtins/bundle-url.js","node_modules/parcel-bundler/src/builtins/bundle-loader.js","node_modules/parcel-plugin-wasm.rs/wasm-loader.js"],"names":["canvas","document","getElementById","rustCanvas","Canvas","new","width","height","ctx","getContext","stepBtn","addEventListener","step","FPSCounter","frameCounter","debug","hoveredColor","pick","event","destination","x","layerX","target","offsetLeft","y","layerY","offsetTop","data","getImageData","r","g","b","a","rgba","style","background","textContent","rgba_to_hue","args","normalize","normalized","Array","from","map","v","xMax","Math","max","xMin","min","chroma","slice","toFixed","frameCount","innerText","imagePtr","image","imageArray","Uint8ClampedArray","rust","wasm","memory","buffer","imageData","ImageData","putImageData","evt","t0","t1","duration","id","render","performance","now","run","floor","requestAnimationFrame","start","running","innerHTML","backgroundColor","cancelAnimationFrame","bundleURL","getBundleURLCached","getBundleURL","Error","err","matches","stack","match","getBaseURL","url","replace","exports","require","loadBundlesLazy","bundles","isArray","length","Promise","resolve","code","LazyPromise","reject","loadBundles","then","all","loadBundle","bundleLoaders","registerBundleLoader","type","loader","module","load","register","bundle","substring","lastIndexOf","toLowerCase","bundleLoader","resolved","catch","e","executor","promise","prototype","onSuccess","onError"],"mappings":"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","file":"js.0ebacf34.js","sourceRoot":"..","sourcesContent":["import rust, { Canvas } from '../crate/Cargo.toml' \n\nlet canvas = document.getElementById('canvas');\nconst rustCanvas = Canvas.new(canvas.width, canvas.height);\nconst width = rustCanvas.width();\nconst height = rustCanvas.height();\nlet ctx = canvas.getContext('2d');\n\nconst stepBtn = document.getElementById('step-btn')\nstepBtn.addEventListener('click', step)\n\n\n// Debug tools --------------------------------------------\n\nconst FPSCounter = document.getElementById('fps')\nconst frameCounter = document.getElementById('frameCount')\n\nconst debug = () => {\n    // let debugCanvas = document.getElementById('test-coloring');\n    // let debugCtx = debugCanvas.getContext('2d');\n    // const testPtr = rustCanvas.test();\n    // const testArray = new Uint8ClampedArray(rust.wasm.memory.buffer, testPtr, 4 * height * width);\n    // let testData = new ImageData(testArray, width, height);\n    // debugCtx.putImageData(testData, 0, 0);\n}\n\n// const debugBtn = document.getElementById('debug-btn')\n// debugBtn.addEventListener('click', debug)\n\n\nconst hoveredColor = document.getElementById('hoveredColor');\n\nfunction pick(event, destination) {\n    const x = event.layerX - event.target.offsetLeft;\n    const y = event.layerY - event.target.offsetTop;\n    const pixel = ctx.getImageData(x, y, 1, 1);\n    const data = pixel.data;\n    const [r,g,b,a] = data\n    // console.log(event)\n\n    const rgba_to_hue = (args) => {\n        const normalize = v => v / 255\n        const normalized = Array.from(args).map(v => normalize(v))\n        const xMax = Math.max(...normalized)\n        const xMin = Math.min(...normalized)\n        const [r,g,b] = normalized\n        const chroma = xMax - xMin\n        if (chroma === 0) return 0\n        if (xMax === r) return 60*(g-b)/chroma\n        if (xMax === g) return 60*(2 + (b-r)/chroma)\n        if (xMax === b) return 60*(4 + (r-g)/chroma)\n    }\n\n    const rgba = `rgba(${r}, ${g}, ${b}, ${a / 255})`;\n    destination.style.background = rgba;\n    destination.textContent = `${rgba_to_hue(data.slice(0,3)).toFixed(0)} degrees`;\n\n    return rgba;\n}\n\ncanvas.addEventListener('mousemove', function(evt) {\n    pick(evt, hoveredColor)\n})\n\n// ---------------------------------------------------------------\n\nfunction step () {\n    rustCanvas.step(0, false);\n    frameCount++\n    frameCounter.innerText = frameCount\n    // norm.innerText = rustCanvas.norm();\n    const imagePtr = rustCanvas.image();\n    const imageArray = new Uint8ClampedArray(rust.wasm.memory.buffer, imagePtr, 4 * height * width);\n    let imageData = new ImageData(imageArray, width, height);\n    ctx.putImageData(imageData, 0, 0);\n}\n\nlet t0 = 0;\nlet t1 = 1;\nlet duration = t0 - t1;\nlet frameCount = 0\nlet id = null;\n\n\nfunction render(){\n    id = null;\n    t0 = performance.now()\n    step()\n    t1 = performance.now()\n    duration = t1 - t0\n    run();\n};\n\nfunction run (){\n    if(frameCount % 10 === 0) FPSCounter.innerText = Math.floor(1e3/duration)\n    if (!id) { id = requestAnimationFrame(render) }\n}\n\nlet start = document.getElementById('start');\nlet running = false;\nstart.addEventListener('click', () => {\n    running = !running;\n    if(running) { \n        run(); \n        start.innerHTML = 'Stop';\n        start.style.backgroundColor = 'red';\n    }\n    else { \n        cancelAnimationFrame(id); \n        id = null; \n        start.innerHTML = 'Start';\n        start.style.backgroundColor = 'greenyellow';\n    }\n});\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var getBundleURL = require('./bundle-url').getBundleURL;\n\nfunction loadBundlesLazy(bundles) {\n  if (!Array.isArray(bundles)) {\n    bundles = [bundles]\n  }\n\n  var id = bundles[bundles.length - 1];\n\n  try {\n    return Promise.resolve(require(id));\n  } catch (err) {\n    if (err.code === 'MODULE_NOT_FOUND') {\n      return new LazyPromise(function (resolve, reject) {\n        loadBundles(bundles.slice(0, -1))\n          .then(function () {\n            return require(id);\n          })\n          .then(resolve, reject);\n      });\n    }\n\n    throw err;\n  }\n}\n\nfunction loadBundles(bundles) {\n  return Promise.all(bundles.map(loadBundle));\n}\n\nvar bundleLoaders = {};\nfunction registerBundleLoader(type, loader) {\n  bundleLoaders[type] = loader;\n}\n\nmodule.exports = exports = loadBundlesLazy;\nexports.load = loadBundles;\nexports.register = registerBundleLoader;\n\nvar bundles = {};\nfunction loadBundle(bundle) {\n  var id;\n  if (Array.isArray(bundle)) {\n    id = bundle[1];\n    bundle = bundle[0];\n  }\n\n  if (bundles[bundle]) {\n    return bundles[bundle];\n  }\n\n  var type = (bundle.substring(bundle.lastIndexOf('.') + 1, bundle.length) || bundle).toLowerCase();\n  var bundleLoader = bundleLoaders[type];\n  if (bundleLoader) {\n    return bundles[bundle] = bundleLoader(getBundleURL() + bundle)\n      .then(function (resolved) {\n        if (resolved) {\n          module.bundle.register(id, resolved);\n        }\n\n        return resolved;\n      }).catch(function(e) {\n        delete bundles[bundle];\n        \n        throw e;\n      });\n  }\n}\n\nfunction LazyPromise(executor) {\n  this.executor = executor;\n  this.promise = null;\n}\n\nLazyPromise.prototype.then = function (onSuccess, onError) {\n  if (this.promise === null) this.promise = new Promise(this.executor)\n  return this.promise.then(onSuccess, onError)\n};\n\nLazyPromise.prototype.catch = function (onError) {\n  if (this.promise === null) this.promise = new Promise(this.executor)\n  return this.promise.catch(onError)\n};\n","var wasm;const __exports = {};\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nconst lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\n\nlet cachedTextEncoder = new lTextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\n/**\n*/\nclass  Canvas {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Canvas.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_canvas_free(ptr);\n    }\n    /**\n    * @param {number} width\n    * @param {number} height\n    * @returns {Canvas}\n    */\n    static new(width, height) {\n        var ret = wasm.canvas_new(width, height);\n        return Canvas.__wrap(ret);\n    }\n    /**\n    * @param {number} damping_bit_shift\n    * @param {boolean} norm_only\n    */\n    step(damping_bit_shift, norm_only) {\n        wasm.canvas_step(this.ptr, damping_bit_shift, norm_only);\n    }\n    /**\n    * @returns {number}\n    */\n    image() {\n        var ret = wasm.canvas_image(this.ptr);\n        return ret;\n    }\n    /**\n    * @returns {number}\n    */\n    test() {\n        var ret = wasm.canvas_test(this.ptr);\n        return ret;\n    }\n    /**\n    * @returns {number}\n    */\n    width() {\n        var ret = wasm.canvas_width(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {number}\n    */\n    height() {\n        var ret = wasm.canvas_height(this.ptr);\n        return ret >>> 0;\n    }\n}\n\n__exports. __wbg_new_59cb74e423758ede = function() {\n    var ret = new Error();\n    return addHeapObject(ret);\n};\n\n__exports. __wbg_stack_558ba5917b466edd = function(arg0, arg1) {\n    var ret = getObject(arg1).stack;\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\n__exports. __wbg_error_4bb6c2a97407129a = function(arg0, arg1) {\n    try {\n        console.error(getStringFromWasm0(arg0, arg1));\n    } finally {\n        wasm.__wbindgen_free(arg0, arg1);\n    }\n};\n\n__exports. __wbindgen_object_drop_ref = function(arg0) {\n    takeObject(arg0);\n};\n\n__exports. __wbindgen_throw = function(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\n\n__exports. Canvas =  Canvas;\n      function init(wasm_path) {\n          const fetchPromise = fetch(wasm_path);\n          let resultPromise;\n          if (typeof WebAssembly.instantiateStreaming === 'function') {\n              resultPromise = WebAssembly.instantiateStreaming(fetchPromise, { './wave_equation_bg.js': __exports });\n          } else {\n              resultPromise = fetchPromise\n              .then(response => response.arrayBuffer())\n              .then(buffer => WebAssembly.instantiate(buffer, { './wave_equation_bg.js': __exports }));\n          }\n          return resultPromise.then(({instance}) => {\n              wasm = init.wasm = instance.exports;\n              __exports.wasm = wasm;\n              return;\n          });\n      };\n      function init_node(wasm_path) {\n          const fs = require('fs');\n          return new Promise(function(resolve, reject) {\n              fs.readFile(__dirname + wasm_path, function(err, data) {\n                  if (err) {\n                      reject(err);\n                  } else {\n                      resolve(data.buffer);\n                  }\n              });\n          })\n          .then(data => WebAssembly.instantiate(data, { './wave_equation_bg': __exports }))\n          .then(({instance}) => {\n              wasm = init.wasm = instance.exports;\n              __exports.wasm = wasm;\n              return;\n          });\n      }\n      const wasm_bindgen = Object.assign(false ? init_node : init, __exports);\n      module.exports = function loadWASMBundle(bundle) {\n            return wasm_bindgen(bundle).then(() => __exports)\n      }\n    "]}